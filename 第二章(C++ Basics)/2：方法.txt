声明和定义
    *声明是一个标识符，而定义就像是实例化一个对象，eg ing a=5; a是一个标识符，他表示一个int类型，值为5的对象。

    *声明满足于编译器，而不满足于连接器。而定义两者皆可。因此：在 C++ 中，所有定义也用作声明。这就是为什么 int x 出现在我们的定义和声明示例中的原因


        #include <iostream>
        int add(int x, int y); // forward declaration of add() using function prototype
        int main()
        {
            std::cout << "The sum of 3 and 4 is: " << add(3, 4) << '\n';
            return 0;
        }
        // note: No definition for function add

        分析:1：函数已声明，但却未定义，为什么编译通过?
            answer:虽然前向声明，但从未调用过该函数，则程序将编译并运行良好。  
                    但是，如果进行了前向声明并调用了函数，但程序从未定义函数，则程序可以编译，但链接器会抱怨它无法解析函数调用

    *前向声明：
        函数使用前，请进行先声明