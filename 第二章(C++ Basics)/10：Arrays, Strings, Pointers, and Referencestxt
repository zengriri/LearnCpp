C-style strings:
    C 风格的字符串只是一个使用空终止符的字符数组。空终止符是一个特殊字符（'\0'，ascii 代码 0），用于指示字符串的结尾。更一般地说，C 风格的字符串称为空终止字符串。
        eg:
        char myString[]{ "string" };


std::string_view：
    提供了在别处定义的字符串的视图。
        eg:
             std::string_view str{ "Trains are fast!" };

    *std::string_view 不仅速度快，而且具有我们从 std::string 中知道的许多功能

    最佳实践：
        *使用 std::string_view 而不是 C 风格的字符串
        *对于只读字符串，最好使用 std::string_view 而不是 std::string，除非您已经有一个 std::string
        *最好使用 std::string_view（按值）而不是 const std::string& 传递字符串，除非您的函数调用其他需要 C 样式字符串或 std::string 参数的函数

 arrays
    fix array:
        *固定数组作为参数的时候，将衰减（隐式转换）为指向数组第一个元素的指针，所以不能用 size 获取他的长度

    allocating arrays:
        eg：
             int* array{ new int[length]{} }
               delete[] array; // use array delete to deallocate array

             double* ptr { new double[5] };

             