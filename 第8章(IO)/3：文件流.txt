简介:
    C++ 中的文件 I/O 的工作方式与普通 I/O 非常相似, C++中有3个基本的文件I/O类
        ifstream（派生自 istream）
        ofstream（派生自 ostream）
        fstream（派生自 iostream）      
            note：位于 fsteram 头文件   

    文件流必须由程序员明确设置。
        然而，这非常简单：要打开一个文件进行读取和/或写入，只需实例化相应文件 I/O 类的对象，并将文件名作为参数
            然后使用插入 (<<) 或提取 (>>) 运算符写入文件或从文件中读取数据。
            完成后，有几种方法可以关闭文件：显式调用 close() 函数，或者只是让文件 I/O 变量超出范围（文件 I/O 类析构函数将为您关闭文件） .
                File output: eg:3-1
                File input：eg:3-2


    File modes：
        可以通过按位或将它们一起指定多个标志（使用 | 运算符）。
            Ifstream 默认为 std::ios::in 文件模式
            Ofstream 默认为 std::ios::out 文件模式
            fstream 默认为 std::ios::in | std::ios::out 文件模式，这意味着默认情况下您可以读写。

            app：
                以追加模式打开文件

            ate：
                在读/写之前寻找文件的末尾

            binary:
                以二进制模式（而不是文本模式）打开文件
            
            in:
                以读取模式打开文件（ifstream 的默认值）

            out：
                以写入模式打开文件（默认为 ofstream）

            trunc:
            如果文件已存在，则擦除文件

        
    使用 open() 显式打开文件:
        就像可以使用 close() 显式关闭文件流一样，也可以使用 open() 显式打开文件流。
            open() 就像文件流构造函数一样工作——它需要一个文件名和一个可选的文件模式。


    Random file I/out：
        seekg() and seekp()：
            随机文件访问是通过使用 seekg() 函数（用于输入）和 seekp() 函数（用于输出）操作文件指针来完成的。
                如果您想知道，g 代表“get”，p 代表“put”
                对于某些类型的流，seekg()（改变读取位置）和 seekp()（改变写入位置）独立操作
                但是，对于文件流，读取和写入位置始终相同，因此 seekg 和 seekp 可以互换使用。

            beg：
                偏移量是相对于文件开头的（默认）

            cur:
                偏移量是相对于文件指针的当前位置

            end:
                偏移量是相对于文件末尾的

            eg：3-3
            
                
