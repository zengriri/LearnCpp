*the one definition rule (ODR):单一定义规则（简称 ODR）是 C++ 中众所周知的规则。 ODR 包含三个部分：
    1:在一个文件中，每个函数、变量、类型或模板只能有一个定义.发生在不同作用域中的定义（例如，在不同函数内定义的局部变量，或在不同命名空间内定义的函数）不违反此规则.
    2:在程序中，每个函数或变量只能有一个定义。存在这一规则是因为程序可以有多个文件.链接器不可见的函数和变量被排除在此规则之外
    3:类型(用户定义的类型(class,struct，unions))、模板、内联函数和内联变量允许在不同文件中具有重复定义，只要每个定义相同即可

    违反 ODR 第 1 部分将导致编译器发出重定义错误.
    违反 ODR 第 2 部分将导致链接器发出重新定义错误。
    违反 ODR 第 3 部分将导致未定义的行为


    note:
        class,struct:编译器通常需要查看完整的定义才能使用给定类型。我们必须能够将完整的类型定义传播到每个需要它的代码文件,
                        因此，类型部分不受单一定义规则的约束：允许在多个代码文件中定义给定类型,

                    但也有限制:
                        1:首先，每个代码文件仍然只能有一个类型定义（这通常不是问题，因为标头防护会阻止这种情况发生）
                        2:其次，给定类型的所有类型定义必须相同，否则将导致未定义的行为。
            




