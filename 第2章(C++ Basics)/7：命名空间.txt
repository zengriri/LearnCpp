命名空间通常用于对大型项目中的相关标识符进行分组，以帮助确保它们不会无意中与其他标识符发生冲突。

Using the scope resolution operator with no name prefix：
    范围解析运算符也可以用在标识符前面而不提供命名空间名称，在这种情况下，会在全局命名空间中查找标识符
        eg: ::doThing()


Nested namespaces：
    eg：
        namespace foo{
            namespace goo{

            }
        }

    eg： namespace::goo{

    }

    注:两种写法一致
Namespace aliases：
      eg:
        namespace active = foo::goo

    *通常，您应该避免深度嵌套的命名空间


Unnamed (anonymous) namespaces:
    *未命名的命名空间（也称为匿名命名空间）是一个没有名称定义的命名空间，
        eg： namespace
            {

            }   

    *在未命名的命名空间中声明的所有内容都被视为父命名空间的一部分。

    *未命名命名空间的另一个影响是未命名命名空间内的所有标识符都被视为具有内部链接.这意味着在定义未命名命名空间的文件之外无法看到未命名命名空间的内容。


Inline namespaces:
    与未命名的命名空间非常相似，在内联命名空间内声明的任何内容都被视为父命名空间的一部分.然而，内联命名空间并没有提供所有内部链接。

note:
    *只有声明和定义可以出现在命名空间的范围内（不是可执行语句）。但是，可以在命名空间内定义函数，并且该函数可以包含可执行语句。
    * :: 符号左侧没有提供标识符，则假定为全局命名空间。


