章节回顾：
    *在每个（非静态）成员函数内，关键字 this 是一个 const 指针，保存当前隐式对象的地址
        我们可以让函数通过引用返回 *this 以便启用方法链接，其中可以在单个表达式中对同一对象调用多个成员函数。

    *最好将类定义放在与类同名的头文件中。简单的成员函数（例如访问函数、具有空主体的构造函数等）可以在类定义中定义。

    *在类类型内部定义的类型称为嵌套类型（或成员类型）。类型别名也可以嵌套。

    *类模板定义内定义的成员函数可以使用类模板本身的模板参数。
        在类模板定义之外定义的成员函数必须重新提供模板参数声明，并且应该在类模板定义的正下方定义（在同一文件中）。

    *静态成员变量是由类的所有对象共享的静态持续时间成员。
        即使没有实例化类的对象，静态成员也存在。最好使用类名、范围解析运算符和成员名称来访问它们。

    *使静态成员内联允许它们在类定义内初始化

    *静态成员函数是无需对象即可调用的成员函数。它们没有 *this 指针，并且无法访问非静态数据成员。

    *在类的主体内部，可以使用友元声明（使用friend关键字）来告诉编译器某些其他类或函数现在是友元
        友元是一个类或函数（成员或非成员），已被授予对另一个类的私有和受保护成员的完全访问权限。
        友元函数是一个可以访问类的私有和受保护成员的函数（成员或非成员），就好像它是该类的成员一样。
        友元类是可以访问另一个类的私有成员和受保护成员的类。