概述：
    编译程序时，编译器会将 C++ 程序中的每条语句转换为一行或多行机器语言。机器语言的每一行都有自己唯一的顺序地址。
    这对函数没有什么不同——当遇到一个函数时，它会被转换成机器语言并给出下一个可用地址。因此，每个函数最终都有一个唯一的地址

    绑定是指用于将标识符（如变量和函数名）转换为地址的过程


早期绑定：
    早期绑定（也称为静态绑定）意味着编译器（或链接器）能够直接将标识符名称（例如函数或变量名称）与机器地址相关联。
    请记住，所有函数都有一个唯一的地址。因此，当编译器（或链接器）遇到函数调用时，它会将函数调用替换为机器语言指令，该指令告诉 CPU 跳转到函数的地址。


后期绑定：
    *在某些程序中，直到运行时（程序运行时）才能知道将调用哪个函数。这称为后期绑定（或动态绑定）
        在 C++ 中，获得后期绑定的一种方法是使用函数指针。简单回顾一下函数指针，函数指针是一种指向函数而不是变量的指针。函数指针指向的函数可以通过在指针上使用函数调用运算符 (()) 来调用。

    *后期绑定的效率略低，因为它涉及额外的间接级别。通过早期绑定，CPU 可以直接跳转到函数的地址。
        使用后期绑定，程序必须读取指针中保存的地址，然后跳转到该地址。这涉及一个额外的步骤，使其稍微慢一些。
        然而，后期绑定的优势在于它比早期绑定更灵活，因为在运行时才需要决定调用什么函数。

    eg: 9-1
    